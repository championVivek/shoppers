[{"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\index.js":"1","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\App.js":"2","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\reportWebVitals.js":"3","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Axios.js":"4","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\adminSignup.jsx":"5","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\adminLogin.jsx":"6","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\AddProduct.jsx":"7","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\Products.jsx":"8","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\EditProduct\\EditProduct.jsx":"9","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\cart\\Cart.jsx":"10","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\checkout\\Checkout.jsx":"11","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Orders\\Orders.jsx":"12","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Context\\userContext.jsx":"13","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Context\\basketContext.jsx":"14","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Home\\Home.jsx":"15","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Header\\Header.jsx":"16","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\User\\Login\\Login.jsx":"17","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\User\\Signup\\Signup.jsx":"18","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\ProtectedRoute.jsx":"19","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\NotFound\\NotFound.jsx":"20"},{"size":635,"mtime":1611123695385,"results":"21","hashOfConfig":"22"},{"size":3533,"mtime":1611208935787,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":111,"mtime":1611204873975,"results":"25","hashOfConfig":"22"},{"size":2228,"mtime":1611125067194,"results":"26","hashOfConfig":"22"},{"size":2349,"mtime":1611202688613,"results":"27","hashOfConfig":"22"},{"size":2997,"mtime":1611142288847,"results":"28","hashOfConfig":"22"},{"size":3281,"mtime":1611208055033,"results":"29","hashOfConfig":"22"},{"size":2890,"mtime":1611203753910,"results":"30","hashOfConfig":"22"},{"size":4872,"mtime":1611208041465,"results":"31","hashOfConfig":"22"},{"size":3378,"mtime":1611145119194,"results":"32","hashOfConfig":"22"},{"size":3359,"mtime":1611209123370,"results":"33","hashOfConfig":"22"},{"size":71,"mtime":1610858936324,"results":"34","hashOfConfig":"22"},{"size":71,"mtime":1610859223054,"results":"35","hashOfConfig":"22"},{"size":3858,"mtime":1611207945487,"results":"36","hashOfConfig":"22"},{"size":3038,"mtime":1611209033126,"results":"37","hashOfConfig":"22"},{"size":2354,"mtime":1611208578250,"results":"38","hashOfConfig":"22"},{"size":2149,"mtime":1611124980154,"results":"39","hashOfConfig":"22"},{"size":557,"mtime":1611125965546,"results":"40","hashOfConfig":"22"},{"size":188,"mtime":1611202390537,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"12gkywq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\index.js",[],["87","88"],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\App.js",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\reportWebVitals.js",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Axios.js",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\adminSignup.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\adminLogin.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\AddProduct.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\Products.jsx",["89"],"import { Card, Button, CardGroup, Spinner } from \"react-bootstrap\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport NumberFormat from 'react-number-format';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../Context/userContext\";\r\nimport axios from \"../../Axios\";\r\nimport \"./products.css\";\r\n\r\nfunction Products() {\r\n  const [products, setProducts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const product = await axios.post(`admin/${userData.user.id}/products`);\r\n      setIsLoading(false);\r\n      setProducts(product.data);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        toast.error(err.response.data.msg, { autoClose: 2000 });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (e) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const deleteProduct = await axios.post(\r\n        `admin/${userData.user.id}/deleteproducts`,\r\n        {\r\n          productId: e.target.value,\r\n        }\r\n      );\r\n      setIsLoading(false);\r\n      setProducts(deleteProduct.data.products);\r\n      toast.success(deleteProduct.data.msg, { autoClose: 2000 });\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        toast.error(err.response.data.msg, { autoClose: 2000 });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    history.push(`/admin/${e.target.value}/editproduct`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\" variant=\"warning\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <div className=\"products__list\">\r\n          <ToastContainer />\r\n          {products.length <= 0 ? (\r\n            <h1>No products</h1>\r\n          ) : (\r\n            <CardGroup>\r\n              {products.map((data, index) => (\r\n                <Card key={index}>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={data.imageUrl}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>{data.title}</Card.Title>\r\n                    <Card.Text>Price: <NumberFormat value={data.price} displayType={'text'} thousandSeparator={true} prefix={'â‚¹'} /></Card.Text>\r\n                    <div className=\"card__buttons\">\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        value={data._id}\r\n                        onClick={handleDelete}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"secondary\"\r\n                        value={data._id}\r\n                        onClick={handleEdit}\r\n                      >\r\n                        Edit product\r\n                      </Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n            </CardGroup>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Admin\\EditProduct\\EditProduct.jsx",["90"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { ToastContainer, toast} from \"react-toastify\"\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserContext from \"../../Context/userContext\";\r\nimport axios from \"../../../Axios\";\r\nimport \"./EditProduct.css\";\r\n\r\nfunction EditProduct() {\r\n  const [newImage, setNewImage] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const { id } = useParams();\r\n  const { handleSubmit, setValue, register } = useForm();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(`/admin/${id}/geteditproduct`, { id: userData.user.id })\r\n      .then((result) => {\r\n        setValue(\"title\", result.data.title);\r\n        setValue(\"price\", result.data.price);\r\n      });\r\n  }, []);\r\n\r\n  const fileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    setNewImage(file);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      var formdata = new FormData();\r\n      formdata.append(\"file\", newImage);\r\n      formdata.append(\"title\", data.title);\r\n      formdata.append(\"price\", data.price);\r\n      formdata.append(\"adminId\", userData.user.id);\r\n      const config = {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const isUpdated = await axios.post(`/admin/${id}/editproduct`, formdata, config);\r\n      toast.success(isUpdated.data.msg, {autoClose: 2000})\r\n      history.push(`/admin/${userData.user.id}/products`);\r\n    } catch (err) {\r\n      toast.error(err.response.data.msg, {autoClose: 2000})\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"EditProduct\">\r\n      <ToastContainer />\r\n      <div className=\"EditProduct__body\">\r\n        <h3>Edit product</h3>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group>\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control\r\n              ref={register}\r\n              name=\"title\"\r\n              type=\"text\"\r\n              placeholder=\"Enter title\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Price</Form.Label>\r\n            <Form.Control\r\n              ref={register}\r\n              name=\"price\"\r\n              type=\"number\"\r\n              placeholder=\"Enter price\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.File\r\n              id=\"custom-file\"\r\n              label=\"Choose image\"\r\n              onChange={fileUpload}\r\n            />\r\n          </Form.Group>\r\n          <div className=\"editproduct__button\">\r\n            <Button variant=\"success\" type=\"submit\">\r\n              Edit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProduct;\r\n","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\cart\\Cart.jsx",["91"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Button, Card, Spinner } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport BasketContext from \"../Context/basketContext\";\r\nimport UserContext from \"../Context/userContext\";\r\nimport axios from \"../../Axios\";\r\nimport \"./Cart.css\";\r\n\r\nfunction Cart() {\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n  const [totalSum, setTotalSum] = useState();\r\n  const [isLoading, setIsLoading] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const { setBasket } = useContext(BasketContext);\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getCart();\r\n  }, []);\r\n\r\n  const getCart = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const product = await axios.post(\"/getcart\", { userId: id });\r\n      setIsLoading(false);\r\n      setCartProducts(product.data);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        toast.error(err.response.data.msg, { autoClose: 2000 });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userData.user) {\r\n      axios.post(\"/gettotal\", { userId: userData.user.id }).then((totalsum) => {\r\n        setBasket(totalsum.data.totalQuantity);\r\n        setTotalSum(totalsum.data.total);\r\n      });\r\n    }\r\n  });\r\n  \r\n  const proceedToBuy = () => {\r\n    history.push(`/checkout`);\r\n  };\r\n\r\n  const handleDelete = async (e) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const product = await axios.post(`/deleteproductincart/${id}`, {\r\n        productId: e.target.value,\r\n      });\r\n      setIsLoading(false);\r\n      setCartProducts(product.data);\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        toast.error(err.response.data.msg, { autoClose: 2000 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\" variant=\"warning\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <div className=\"cartproducts__list\">\r\n          {cartProducts.length <= 0 ? (\r\n            <h1>Cart is empty!!</h1>\r\n          ) : (\r\n            <React.Fragment>\r\n              <ToastContainer />\r\n              {cartProducts.map((data, index) => (\r\n                <Card key={index} className=\"cartproducts__card\">\r\n                  <Card.Body>\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={data.productId.imageUrl}\r\n                    />\r\n                    <div className=\"cartproducts__title\">\r\n                      <Card.Title>{data.productId.title}</Card.Title>\r\n                      <Card.Text className=\"card__quantity\">\r\n                        Quantity: {data.quantity}\r\n                      </Card.Text>\r\n                      <Card.Text>\r\n                        Price:{\" \"}\r\n                        <NumberFormat\r\n                          value={data.productId.price}\r\n                          displayType={\"text\"}\r\n                          thousandSeparator={true}\r\n                          prefix={\"â‚¹\"}\r\n                        />\r\n                      </Card.Text>\r\n                    </div>\r\n                  </Card.Body>\r\n                  <div className=\"cartproducts__footer\">\r\n                    <h4>\r\n                      Sub-total:{\" \"}\r\n                      <NumberFormat\r\n                        value={data.quantity * data.productId.price}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"â‚¹\"}\r\n                      />\r\n                    </h4>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      value={data.productId._id}\r\n                      onClick={handleDelete}\r\n                    >\r\n                      Remove from Cart\r\n                    </Button>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n              <div className=\"checkout\">\r\n                <div className=\"checkout__total\">\r\n                  Total:{\" \"}\r\n                  <NumberFormat\r\n                    value={totalSum}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={true}\r\n                    prefix={\"â‚¹\"}\r\n                  />\r\n                </div>\r\n                <div className=\"checkout__button\">\r\n                  <Button onClick={proceedToBuy}>\r\n                    <FlashOnIcon />\r\n                    Proceed to Buy\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\checkout\\Checkout.jsx",["92"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Button, Card, Spinner } from \"react-bootstrap\";\r\nimport NumberFormat from \"react-number-format\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport UserContext from \"../Context/userContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"../../Axios\";\r\nimport \"./Checkout.css\";\r\n\r\nconst getDataFromServer = async () => {\r\n  const Stripekey = await axios.get(\"/sendpikey\");\r\n  return Stripekey.data;\r\n};\r\n\r\nconst stripePromise = getDataFromServer().then((res) => {\r\n  return loadStripe(res);\r\n});\r\n\r\nfunction Checkout() {\r\n  const [cartProducts, setCartProducts] = useState([]);\r\n  const [totalSum, setTotalSum] = useState();\r\n  const [isLoading, setIsLoading] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.post(\"/getcart\", { userId: userData.user.id }).then((product) => {\r\n      setIsLoading(false);\r\n      setCartProducts(product.data);\r\n    });\r\n    axios.post(\"/gettotal\", { userId: userData.user.id }).then((totalsum) => {\r\n      setTotalSum(totalsum.data.total);\r\n    });\r\n  }, []);\r\n\r\n  const Checkout = async () => {\r\n    try {\r\n      const stripe = await stripePromise;\r\n\r\n      if (!stripe) {\r\n        // Stripe.js has not yet loaded.\r\n        // Make  sure to disable form submission until Stripe.js has loaded.\r\n        return;\r\n      }\r\n      setIsLoading(true);\r\n      const res = await axios.post(\"/checkout\", { userId: userData.user.id });\r\n      const clientSecret = res.data.id;\r\n      setIsLoading(true);\r\n      const result = await stripe.redirectToCheckout({\r\n        sessionId: clientSecret,\r\n      });\r\n      if (result.error) {\r\n        console.log(result.error.message);\r\n      } else {\r\n        if (result.paymentIntent.status === \"succeeded\") {\r\n          setIsLoading(false);\r\n          history.push(\"/\");\r\n        }\r\n      }\r\n    } catch (err) {\r\n      err.response.data.msg &&\r\n        toast.error(err.response.data.msg, { autoClose: 2000 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <Spinner animation=\"border\" role=\"status\" variant=\"warning\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <div className=\"checkoutproducts__list\">\r\n          <ToastContainer />\r\n          {cartProducts.map((data, index) => (\r\n            <Card key={index} className=\"checkoutproducts__card\">\r\n              <Card.Body>\r\n                <div className=\"checkoutproducts__title\">\r\n                  <Card.Title>{data.productId.title}</Card.Title>\r\n                  <Card.Text className=\"checkout__quantity\">\r\n                    Quantity: {data.quantity}\r\n                  </Card.Text>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n          <div className=\"checkout\">\r\n            <div className=\"checkout__total\">Total: <NumberFormat value={totalSum} displayType={'text'} thousandSeparator={true} prefix={'â‚¹'} /></div>\r\n            <div className=\"checkout__button\">\r\n              <Button onClick={Checkout}>PLACE ORDER</Button>\r\n            </div>{\" \"}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n","E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Orders\\Orders.jsx",["93"],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Context\\userContext.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Context\\basketContext.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Home\\Home.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\Header\\Header.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\User\\Login\\Login.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\User\\Signup\\Signup.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\ProtectedRoute.jsx",[],"E:\\Programming\\Projects\\shopping_cart\\shopping-frontend\\src\\Components\\NotFound\\NotFound.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":18,"column":6,"nodeType":"100","endLine":18,"endColumn":8,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":24,"column":6,"nodeType":"100","endLine":24,"endColumn":8,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"104","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":8,"suggestions":"105"},{"ruleId":"98","severity":1,"message":"106","line":36,"column":6,"nodeType":"100","endLine":36,"endColumn":8,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"108","line":18,"column":6,"nodeType":"100","endLine":18,"endColumn":8,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["112"],"React Hook useEffect has missing dependencies: 'id', 'setValue', and 'userData.user.id'. Either include them or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'userData.user.id'. Either include it or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [fetchProducts]",{"range":"127","text":"128"},"Update the dependencies array to be: [id, setValue, userData.user.id]",{"range":"129","text":"130"},"Update the dependencies array to be: [getCart]",{"range":"131","text":"132"},"Update the dependencies array to be: [userData.user.id]",{"range":"133","text":"134"},"Update the dependencies array to be: [getOrders]",{"range":"135","text":"136"},[654,656],"[fetchProducts]",[880,882],"[id, setValue, userData.user.id]",[888,890],"[getCart]",[1250,1252],"[userData.user.id]",[607,609],"[getOrders]"]